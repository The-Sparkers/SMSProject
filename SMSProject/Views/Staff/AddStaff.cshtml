@model SMSProject.ViewModels.AdminViewModels.AddStaffViewModel

@{
    ViewBag.Title = "Add Staff";
}

<h2>Add Staff</h2>
<br />

@using (Html.BeginForm("AddStaff", "Staff", FormMethod.Post, new { id = "addsta" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal agile_info_shadow">
        <p class="text-info">Enter all the information of the staff memeber correctly.</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "eg: Muhammad Ali Ahmad" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control", placeholder = "eg: XXXXX-XXXXXXX-X" } })
                @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, "Select Gender", new { @class = "form-control1" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.MCountryCode, new { htmlAttributes = new { @class = "form-control", placeholder = "+92" } })
                @Html.ValidationMessageFor(model => model.MCountryCode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">
                @Html.EditorFor(model => model.MCompanyCode, new { htmlAttributes = new { @class = "form-control", placeholder = "321" } })
                @Html.ValidationMessageFor(model => model.MCompanyCode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.MNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "1234567" } })
                @Html.ValidationMessageFor(model => model.MNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StaffType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.StaffType, "Select Type", new { @class = "form-control1", id = "selectType" })
                @Html.ValidationMessageFor(model => model.StaffType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="nonteach">
            @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobType, new { htmlAttributes = new { @class = "form-control", placeholder = "eg: ADMIN" } })
                @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="javascript:document.getElementById('addsta').submit()" class="btn btn-primary">Add</a>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!--Script to hide or show the job type box-->
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#nonteach").hide();
            $("#selectType").change(function () {
                if ($("#selectType").val() != 1) {
                    $("#nonteach").show();
                } else {
                    $("#nonteach").hide();
                }
            });
        });
    </script>
}
