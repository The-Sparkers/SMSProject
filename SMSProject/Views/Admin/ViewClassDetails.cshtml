@model SMSProject.ViewModels.AdminViewModels.ViewClassDetailsViewModel

@{
    ViewBag.Title = Model.Name + " Class Details";
    Model.Progress.Reverse();
}

<h2>Class Details</h2>
<br />
<div class="agile_info_shadow">
    <hr />

    <div class="col-md-6">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.RollNo)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.RollNo)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Incharge)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Incharge)<p>@Html.ActionLink("Change", "ChangeClassIncharge", new { id = Model.Id }, new { @class = "btn btn-warning" })</p>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Strength)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Strength)
            </dd>

        </dl>

    </div>
    <!--Start of Chart-->
    <div class="col-md-6">
        <div class="charts_section_agileinfo">
            <div class="charts_agile_w3ls">
                <h3>Section wise Progress</h3>
                <div id="chartdiv7"></div>
            </div>
        </div>
    </div>
    <!--End of Chart-->
    <div class="clearfix"></div>
</div>
<div class="clearfix"></div>
<div class="">
    <div class="col-md-6 agile_info_shadow">
        <div class="col-md-4">
            <h4>Subjects</h4>
        </div>
        <div class="col-md-offset-6 col-md-2">
            @Html.ActionLink("Add", "AddSubject", new { id = Model.Id }, new { @class = "btn btn-primary" })
        </div>
        <br />
        <div class="table table-responsive">
            <table class="table table-hover">
                <tr>
                    <th>#</th>
                    <th>@Html.DisplayNameFor(model => model.Subjects[0].Name)</th>
                    <th></th>
                </tr>
                @{ int i = 0;}
                @foreach (var item in Model.Subjects)
            {
                    <tr>
                        <td>@(++i)</td>
                        <td>@item.Name</td>
                        <td>
                            @Html.ActionLink("Remove", "RemoveSubject", new { id = item.Id }, new { @class = "btn btn-danger veSub" })
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
    <div class="col-md-6 agile_info_shadow">
        <div class="col-md-4">
            <h4>Sections</h4>
        </div>
        <div class="col-md-offset-6 col-md-2">
            @Html.ActionLink("Add", "AddSection", new { id = Model.Id }, new { @class = "btn btn-primary" })
        </div>
        <br />
        <div class="table table-responsive">
            <table class="table table-hover">
                <tr>
                    <th>#</th>
                    <th>@Html.DisplayNameFor(model => model.Sections[0].Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Sections[0].Strength)</th>
                    <th></th>
                </tr>
                @{ i = 0;}
                @foreach (var item in Model.Sections)
            {
                    <tr>
                        <td>@(++i)</td>
                        <td>@item.Name</td>
                        <td>@item.Strength</td>
                        <td>
                            @Html.ActionLink("View", "ViewSection", new { id = item.Id }, new { @class = "btn btn-danger" }) |
                            @Html.ActionLink("Remove", "RemoveSection", new { id = item.Id }, new { @class = "btn btn-success remSec" })
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>
<div class="clearfix"></div>
<br />
@section Scripts{
    @if (ViewBag.Error != null)
    {
        if ((bool)ViewBag.Error)
        {
            <script type="text/javascript">
                $(document).ready(window.alert("Record not saved."));
            </script>
        }
    }
    @if (ViewBag.Success != null)
    {
        if ((bool)ViewBag.Success)
        {
            <script type="text/javascript">
                $(document).ready(window.alert("Record has been saved successfully."));
            </script>
        }
    }
    <!--Script to get client side conformation-->
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $(".remSec").click(function () {
                return confirm("Only an empty Section of a class can be deleted.")
            });
            $(".veSub").click(function () {
                return confirm("Are you sure want to delete this subject? Deleting this subject can harm your class tests and examnation results.");
            });
        });
    </script>
    <!--Script for making chart for sections progress-->
    @Scripts.Render("~/bundles/amcharts")
    <script type="text/javascript">
        var chart = AmCharts.makeChart("chartdiv7", {
            "type": "serial",
            "theme": "light",
            "legend": {
                "useGraphSettings": true
            },
            "dataProvider": [
                
                @foreach (var item in Model.Progress)
        {
            <text>
                        {
                            "year": @item.Month,
                            @foreach (var item2 in item.SectionsProgres)
                    {
                        <text>
                            "@item2.SectionName": @item2.ProgressPercent,
                            </text>
                    }

                        },
                    </text>
        }],
            "valueAxes": [{
                "integersOnly": true,
                "maximum": 100,
                "minimum": 1,
                "reversed": false,
                "axisAlpha": 0,
                "dashLength": 10,
                "gridCount": 5,
                "position": "right",
                "title": "Result %"
            }],
            "startDuration": 0.5,
            "graphs": [
                @foreach (var item in Model.Progress[0].SectionsProgres)
{
    <text>
                    {
                        "balloonText": "overall result of @item.SectionName in month [[category]]: [[value]]%",
                        "bullet": "round",
                        "title": "@item.SectionName",
                        "valueField": "@item.SectionName",
                        "fillAlphas": 0
                    },
            </text>
}],
            "chartCursor": {
                "cursorAlpha": 0,
                "zoomable": false
            },
            "categoryField": "year",
            "categoryAxis": {
                "gridPosition": "start",
                "axisAlpha": 0,
                "fillAlpha": 0.05,
                "fillColor": "#000000",
                "gridAlpha": 0,
                "position": "top"
            },
            "export": {
                "enabled": true,
                "position": "bottom-right"
            }
        });

    </script>


}