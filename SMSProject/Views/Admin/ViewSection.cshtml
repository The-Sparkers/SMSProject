@model SMSProject.ViewModels.AdminViewModels.ViewSectionViewModel

@{
    ViewBag.Title = "Section " + Model.Name;
    int i = 0;
}

<h2>Section @Model.Name of @Model.Class</h2>
<br />
<div class="col-md-12">
    <div class="col-md-6 agile_info_shadow">
        <h4>Top 5 Students</h4>
        <br />
        <div class="table table-responsive">
            <table class="table table-hover" id="table-bright">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>@Html.DisplayNameFor(m => m.BrightStudents[0].Name)</th>
                        <th>@Html.DisplayNameFor(m => m.BrightStudents[0].RollNumber)</th>
                        <th>@Html.DisplayNameFor(m => m.BrightStudents[0].Progress)</th>
                        <th>@Html.DisplayNameFor(m => m.BrightStudents[0].Attendance)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.BrightStudents)
                    {
                        <tr>
                            <td>@(++i)</td>
                            <td>@item.Name</td>
                            <td>@item.RollNumber</td>
                            <td>@item.Progress%</td>
                            <td>@item.Attendance%</td>
                        </tr>
                    }
                    <tr>
                        @{ i = 0;}
                        <td colspan="4"></td>
                        <td>@Html.ActionLink("View All", "ViewStudents", new { secId = Model.Id }, new { @class = "btn btn-danger" })</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-md-6 agile_info_shadow">
        <h4>Today's Attendance</h4>
        <div id="chartdiv8"></div>
        <br />
    </div>
</div>
<div class="clearfix"></div>
<br />
<div class="agile_info_shadow">
    <div class="col-md-offset-12 col-md-2">
    </div>
    <div class="table table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>
                        #
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.AssignedTeachers[0].SubName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.AssignedTeachers[0].TName)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.AssignedTeachers)
                {
                    <tr>
                        <td>@(++i)</td>
                        <td>@item.SubName</td>
                        <td>@item.TName</td>
                        <td>
                            @if (@item.TId != 0)
                            {
                                @Html.ActionLink("Change", "ChangeSecTeacher", new { secId = Model.Id, subId = item.SubId, tId = item.TId }, new { @class = "btn btn-danger" })
                            }
                            else
                            {
                                @Html.ActionLink("Assign", "AssignSecTeacher", new { secId = Model.Id, subId = item.SubId }, new { @class = "btn btn-success" })
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="clearfix"></div>
@section Scripts{
    @if (ViewBag.Error != null)
    {
        if ((bool)ViewBag.Error)
        {
            <script type="text/javascript">
                $(document).ready(window.alert("Record not saved. Make sure this teacher isn't already assigned to the same course"));
            </script>
        }
    }
    @if (ViewBag.Success != null)
    {
        if ((bool)ViewBag.Success)
        {
            <script type="text/javascript">
                $(document).ready(window.alert("Record has been saved successfully."));
            </script>
        }
    }
    <!--Script to make chart for attendance-->
    @Scripts.Render("~/bundles/amcharts")
    <script type="text/javascript">
        var chart = AmCharts.makeChart("chartdiv8", {
            "type": "pie",
            "theme": "light",
            "dataProvider": [{
                "title": "Absent",
                "value": @Model.StudentAbsent
                }, {
                    "title": "Present",
                    "value": @Model.StudentPresent
                    }],
            "titleField": "title",
            "valueField": "value",
            "labelRadius": 5,

            "radius": "42%",
            "innerRadius": "60%",
            "labelText": "[[title]]",
            "export": {
                "enabled": true
            }
        });
    </script>
    <!--End of chart script-->
}