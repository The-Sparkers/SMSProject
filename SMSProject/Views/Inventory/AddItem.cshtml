@model SMSProject.ViewModels.AdminViewModels.AddItemViewModel
@using SMSProject.Models

@{
    ViewBag.Title = "Add Item";
    List<SelectListItem> lstCategories = new List<SelectListItem>();
    foreach (var item in InventoryCategory.GetAllCategories(SMSProject.ServiceModules.Cryptography.Decrypt(Request.Cookies.Get("rwxgqlb").Value)))
    {
        lstCategories.Add(new SelectListItem
        {
            Value = item.CategoryId.ToString(),
            Text = item.CategoryName
        });
    }
}

<h2>Add Item</h2>
<br />
<br />

@using (Html.BeginForm("AddItem", "Inventory", FormMethod.Post, new { id = "additm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal agile_info_shadow">
        <p class="text-info">Adds new Item</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "e.g.Pencil" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control1", @type="number" } )
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control1" } )
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Category, lstCategories, "Select Item", new { @class = "form-control1" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="javascript:document.getElementById('additm').submit()" class="btn btn-primary">Add</a>
            </div>
        </div>
    </div>
}

<br />
<br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
