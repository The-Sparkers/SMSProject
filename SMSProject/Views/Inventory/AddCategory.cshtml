@model SMSProject.ViewModels.AdminViewModels.AddCategoryViewModel

@{
    ViewBag.Title = "Add Category";
}

<h2>Add Category</h2>

<br />
<br />
<br />
@using (Html.BeginForm("AddCategory", "Inventory", FormMethod.Post, new { id = "addcat" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal agile_info_shadow">
        <p class="text-info">Creates a new Category for the inventory</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                <p class="text-primary">Please write an appropriate name for the category, after saving you won't be able to edit it.</p>
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="javascript:document.getElementById('addcat').submit()" class="btn btn-primary">Add</a>
            </div>
        </div>
    </div>
}
<br />
<br />
<br />
<br />
<br />
<br />
<div class="clearfix"></div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    @if (ViewBag.Success != null)
    {
        if ((bool)ViewBag.Success)
        {
            <script>
                $(document).ready(window.alert("Record saved successfully."));
            </script>
        }
        else
        {
            <script>
                $(document).ready(window.alert("Record not saved."));
            </script>
        }
    }
}
